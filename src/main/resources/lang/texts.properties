# JEI API
elementGui.jei.needs_api=The Just enough items API must be enabled in workspace settings to save this mod element.

# Mod Elements
  # JEI Recipe Type
modelement.jeirecipetype=JEI recipe type
modelement.jeirecipetype.name=Create a JEI recipe type
modelement.jeirecipetype.description=A custom just enough items recipe type
elementGui.jeiRecipeType.title=Recipe type title:
elementGui.jeiRecipeType.icon=Category tab icon:
elementGui.jeiRecipeType.crafting_table=Crafting table used:
elementGui.jeiRecipeType.background=GUI background image:
elementGui.jeiRecipeType.width=Texture width:
elementGui.jeiRecipeType.height=Texture height:
elementGui.jeiRecipeType.clickArea=Enable clickable Area:
elementGui.jeiRecipeType.clickAreaX=X Position:
elementGui.jeiRecipeType.clickAreaY=Y Position:
elementGui.jeiRecipeType.clickAreaWidth=Width:
elementGui.jeiRecipeType.clickAreaHeight=Height:
elementGui.jeiRecipeType.slot_type=Slot type:
elementGui.jeiRecipeType.slot_name=Slot Name:
elementGui.jeiRecipeType.optional=Optional:
elementGui.jeiRecipeType.add_entry=Add GUI slot
elementGui.jeiRecipeType.slots=GUI slots
elementGui.jeiRecipeType.crafting_empty=You must choose at least one crafting table.
elementGui.jeiRecipeType.recipeType_needs_title=The recipe type must have a title.
elementGui.jeiRecipeType.missing_texture=The recipe type must have a background texture.

  # JEI Recipe
modelement.jeirecipe=JEI recipe
modelement.jeirecipe.name=Create a JEI recipe
modelement.jeirecipe.description=A custom just enough items recipe
elementGui.jeiRecipe.category=Recipe category:
elementGui.jeiRecipe.output=Result item:
elementGui.jeiRecipe.output_amount=Item count:
elementGui.jeiRecipe.entries=Input ingredients
elementGui.jeiRecipe.add_entry=Add ingredient entry
elementGui.jeiRecipe.no_category=You must select a category for the recipe.
elementGui.jeiRecipe.no_result=The recipe must have a result.

  # JEI Information
modelement.jeiinformation=JEI information
modelement.jeiinformation.name=Create JEI information
modelement.jeiinformation.description=Information about a group of items, displayed in JEI
elementGui.jeiInformation.info_items=Items with information:
elementGui.jeiInformation.items_info=Information description displayed by JEI in game:
elementGui.jeiInformation.needs_description=The items must have a description.
elementGui.jeiInformation.needs_items=You need to include items that use the description.

  # Anvil Recipe
modelement.anvilrecipe=Anvil recipe
modelement.anvilrecipe.name=Create an anvil recipe
modelement.anvilrecipe.description=A custom vanilla anvil recipe
elementGui.anvilRecipe.left_item=Left anvil slot item:
elementGui.anvilRecipe.right_item=Right anvil slot item:
elementGui.anvilRecipe.right_item_cost=Right slot item cost:
elementGui.anvilRecipe.xp_cost=XP cost:
elementGui.anvilRecipe.output=Recipe output:

# Lists
dialog.selector.recipes.message=Select a recipe type:
blockly.block.ingredient_list_mutator.container=Recipe Ingredients
blockly.block.ingredient_list_mutator.ingredient=Ingredient
blockly.block.ingredient_list.ingredient=Ingredient
blockly.block.ingredient_list.ingredient_type=Type:
blockly.block.ingredient_list.ingredient_name=Name:
blockly.block.ingredient_list.ingredient_consume=Consume:
blockly.block.ingredient_list.ingredient_input=Input:


# Category
blockly.category.just_enough_recipes=Just enough recipes
blockly.category.jer_recipes=Recipes
blockly.category.jer_result_lists=Result lists
blockly.category.jer_utils=Utils

# Blocks
  # Recipes
blockly.block.get_recipe_result=Get the result of the recipe type %1 from the ingredients:
blockly.block.get_recipe_result_amount=Get the result amount of the recipe type %1 from the ingredients:
blockly.block.is_recipe_valid=Does recipe type %1 have a result from the ingredients:
blockly.block.get_recipe_result_list=Get a list of results of the recipe type %1 from the ingredients:
  # Result Lists
blockly.block.result_list_foreach=For each result from result list %1 as %2 do %3
blockly.block.result_list_get_random=Get random result from recipe list %1
blockly.block.result_list_size=Get size of recipe list %1
blockly.block.result_list_contains=Does %1 contain recipe result %2
blockly.block.result_list_at_index=Get result from result list %1 at index %2
  # Utils
blockly.block.zArraylists_add_result_list_to_arraylist=Add result list %1 to arraylist %2
blockly.block.utils_item_in_slot=Get item in Slot %4 of block at x: %1 y: %2 z: %3
blockly.block.utils_fluid_in_tank=Get fluid in Tank %4 of block at x: %1 y: %2 z: %3
blockly.block.utils_set_item_with_amount=Set item with amount %5 in slot %4 at x: %1 y: %2 z: %3 while accounting for the existing amount
